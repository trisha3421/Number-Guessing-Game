/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
 

import Classes.GuessNumbers;
import Classes.Gui;
import javax.swing.JOptionPane;

/**
 *
 * @author tarek
  */
public class Guessing_Game extends javax.swing.JFrame{

    private Object Toolkit;

    /**
     * Creates new form Guessing_Game
     */
    public Guessing_Game() {
        initComponents();
        
       init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reset = new javax.swing.JLabel();
        showrandomnum = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        best_score = new javax.swing.JLabel();
        guess = new javax.swing.JLabel();
        life = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        f_guess = new javax.swing.JTextField();
        unshow = new javax.swing.JLabel();
        score = new javax.swing.JLabel();
        show = new javax.swing.JLabel();
        b_guess = new javax.swing.JLabel();
        b_showrandomnum = new javax.swing.JLabel();
        remarks = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GUESSING GAME");
        setResizable(false);

        reset.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/reset icon_1.png"))); // NOI18N
        reset.setToolTipText("reset");
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetMouseClicked(evt);
            }
        });

        showrandomnum.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        showrandomnum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        showrandomnum.setText("?");
        showrandomnum.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 51));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("***** GUESSING GAME *****");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/guess icon_1.jpg"))); // NOI18N

        best_score.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        best_score.setText("Best Score: 0");
        best_score.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        guess.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guess.setText("Guesses: 0");
        guess.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        life.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        life.setText("Life:10");
        life.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        life.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lifeMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Enter Your Number(1-100)");

        f_guess.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                f_guessKeyTyped(evt);
            }
        });

        unshow.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        unshow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/p.p..jpg"))); // NOI18N
        unshow.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        unshow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unshowMouseClicked(evt);
            }
        });

        score.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        score.setText(" Score: 0");
        score.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        show.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        show.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/eye icon_1.jpg"))); // NOI18N
        show.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        show.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showMouseClicked(evt);
            }
        });

        b_guess.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b_guess.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b_guess.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/right icon_1.png"))); // NOI18N
        b_guess.setText("Guess");
        b_guess.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_guessMouseClicked(evt);
            }
        });

        b_showrandomnum.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b_showrandomnum.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/shufle.jpg"))); // NOI18N
        b_showrandomnum.setText("New Random Number");
        b_showrandomnum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_showrandomnumMouseClicked(evt);
            }
        });

        remarks.setBackground(new java.awt.Color(204, 0, 51));
        remarks.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        remarks.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        remarks.setText("*******Try your luck*******");
        remarks.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(score, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(guess, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(life, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(f_guess, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19)
                                        .addComponent(showrandomnum, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(show, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(unshow, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(b_showrandomnum, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b_guess, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(remarks, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(best_score, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(best_score, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guess, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(life, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(score, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unshow, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(show, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(f_guess, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(showrandomnum, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b_guess, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_showrandomnum))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(remarks, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_guessMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_guessMouseClicked
        // TODO add your handling code here:
        guess();
    }//GEN-LAST:event_b_guessMouseClicked

    private void b_showrandomnumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_showrandomnumMouseClicked
        // TODO add your handling code here:
        randomNew();
    }//GEN-LAST:event_b_showrandomnumMouseClicked

    private void showMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showMouseClicked
        // TODO add your handling code here:
        show.setEnabled(false);
        unshow.setEnabled(true);
        showrandomnum.setText(String.valueOf(random));
        
    }//GEN-LAST:event_showMouseClicked

    private void unshowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unshowMouseClicked
  // TODO add your handling code here:
         show.setEnabled(true);
        unshow.setEnabled(false);
        showrandomnum.setText("?");
    }//GEN-LAST:event_unshowMouseClicked

    private void f_guessKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f_guessKeyTyped
        Gui._integerOnly(evt);
    }//GEN-LAST:event_f_guessKeyTyped

    private void resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseClicked
        // TODO add your handling code here:
        Object[] options = {"YES","NO"};
    int x=JOptionPane.showOptionDialog(this,"Are you sure you want to reset (yes/no)?", "MESSAGE",
         JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,null);
        if(x == JOptionPane.YES_OPTION){
            reset();
            
        }else{
         System.exit(0);   
        }
        
    }//GEN-LAST:event_resetMouseClicked

    private void lifeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lifeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lifeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Guessing_Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Guessing_Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Guessing_Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Guessing_Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Guessing_Game().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel b_guess;
    private javax.swing.JLabel b_showrandomnum;
    private javax.swing.JLabel best_score;
    private javax.swing.JTextField f_guess;
    private javax.swing.JLabel guess;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel life;
    private javax.swing.JLabel remarks;
    private javax.swing.JLabel reset;
    private javax.swing.JLabel score;
    private javax.swing.JLabel show;
    private javax.swing.JLabel showrandomnum;
    private javax.swing.JLabel unshow;
    // End of variables declaration//GEN-END:variables
Gui gui;
private int random=0, bestscore=0, yourscore=0, addcorrectscore=3;
private byte guesscount=0, lifeCount=10, greaterThanError=0, lessThanError=0;
    private void init(){
    gui = new Gui();
    Gui._centerFrame(this);
    gui.setIconFrame(this);
    random = GuessNumbers._randomNumber();
   // f_guess.setText(String.valueOf(random));
   unshow.setEnabled(false);
   bestscore = Gui.getCurrentBestScore();
   best_score.setText("Best Score = "+bestscore);
}

private void randomNew(){
    
     random = GuessNumbers._randomNumber();
    f_guess.setText("");
    f_guess.requestFocus();
     unshow.setEnabled(false);
      show.setEnabled(true);
      showrandomnum.setText("?");
}  
private void guess(){
    if(f_guess.getText().equals("")){
        Gui._message(" Please Enter your number!", 0);
        f_guess.requestFocus();
    }else if(Integer.parseInt(f_guess.getText()) >=101 || Integer.parseInt(f_guess.getText()) <1 ){
        Gui._message("Please Enter Number from 1 to 100",0 );
        f_guess.setText("");
        f_guess.requestFocus();
    }
else{
      int yournumber = Integer.parseInt(f_guess.getText());
      //Gui._message("Your Number:"+yournumber,1 );
        if(yournumber == random){
            Gui._message("You Won!\nadditional 3 life was added!", 1);
        yourscore++;
        score.setText("Score:"+yourscore);
        lifeCount+=addcorrectscore;
        life.setText("Life:"+lifeCount);
        updateBestScore();
             Object[] options = {"YES,I WANT NOW","NO,I AM TIRED"};
    int x=JOptionPane.showOptionDialog(this," want to play again (yes/no)?", "MESSAGE",
         JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,null);
        if(x == JOptionPane.YES_OPTION){
            //newGame();
            
        }else{
         System.exit(0);   
        }
        }else{
        lifeCount--;
        life.setText("Life:"+lifeCount);
        if(lifeCount<=4){
//life.setIcon(new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Asset/warning icon.jpg"))));
        }else{
            life.setIcon(null);
        }
        hint(random,yournumber);
        if(lifeCount==0){
            Gui._message("You have used all your life\nPlease,try again", 0);
                 Object[] options = {"YES","NO"};
    int x=JOptionPane.showOptionDialog(this,"Are you sure you want to reset (yes/no)?", "MESSAGE",
         JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,null,options,null);
        if(x == JOptionPane.YES_OPTION){
            reset();
            
        }else{
         System.exit(0);   
        }
            
           //System.exit(0);
        }
        }
        guesscount++;
        guess.setText("Guess:"+guesscount);
    }
    }
private void hint(int _randomnumber,int yournumber){
    String mes ;
   if(_randomnumber>yournumber){
       lessThanError++;
      mes = messageHint(lessThanError, (byte)1 ,yournumber);
      remarks.setText(mes);
   } else{
       greaterThanError++;
     mes = messageHint(greaterThanError, (byte)0 ,yournumber);
      remarks.setText(mes);
   }
}
    @SuppressWarnings("UnusedAssignment")
    private String messageHint(byte errorCount,byte errorCatcher,int numGuess){
   String message;
   switch(errorCatcher){
       case 1:
        String messageCat[]={String.valueOf(numGuess)+"is less than the number!Please,be observant",
               String.valueOf(numGuess)+"is less than the number!don't you know how you compute?!",
               String.valueOf(numGuess)+"is less than the number!oh,come on!!",
               String.valueOf(numGuess)+"is less than the number!I'm tired of reminding"};
           if(errorCount < 3){
               message = String.valueOf(numGuess) + " is less than the random number! ";
             
           }else{
               int randomMes = (int)Math.round(Math.random() * 3);
               message = messageCat[randomMes];
           }
           break;
       default: 
           String messageCat1[]={String.valueOf(numGuess)+"is greater than the number!Please,be observant",
               String.valueOf(numGuess)+" is greater than the number!don't you know how you compute?!",
               String.valueOf(numGuess)+" is greater than the number!oh,come on!!",
               String.valueOf(numGuess)+" is greater than the number!I'm tired of reminding"};
           if(errorCount < 3){
               message = String.valueOf(numGuess)+ "is greater than the random number! ";
           }else{
               int randomMes = (int)Math.round(Math.random() * 3);
               message = messageCat1[randomMes];
           }
       break;
       
   }
    return message;
}

   private void updateBestScore(){
       if(yourscore > bestscore){
           Gui._message("Congratulation!! New Best Score.", 1);
           Gui.setNewBestScore("bestScore["+yourscore+"]");
           bestscore = yourscore;
           best_score.setText("Best Score: "+bestscore);
       }
   }
   private void newGame(){
       f_guess.setText("");
       f_guess.requestFocus();
       remarks.setText("*******Try your luck*******");
       unshow.setEnabled(false);
       show.setEnabled(true);
       showrandomnum.setText("?");
       guess.setText("Guesses : 0");
       guesscount = 0;
       life.setText("Life : 0");
       life.setIcon(null);
       lifeCount = 10;
       greaterThanError = 0;
       lessThanError = 0;
       random = GuessNumbers._randomNumber();
   }

       private void reset(){
       f_guess.setText("");
       f_guess.requestFocus();
       remarks.setText("*******Try your luck*******");
       unshow.setEnabled(false);
       show.setEnabled(true);
       showrandomnum.setText("?");
       guess.setText("Guesses : 0");
       guesscount = 0;
       life.setText("Life : 0");
       life.setIcon(null);
       lifeCount = 10;
       greaterThanError = 0;
       lessThanError = 0;
       random = GuessNumbers._randomNumber();
       score.setText("Score : 0");
       yourscore = 0;
       //bestscore = 0;
      updateBestScore();
      bestscore = 0;
      Gui.setNewBestScore("bestScore["+bestscore+"]");
   }
    }

   
    



